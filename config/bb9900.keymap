 /*
 * Copyright (c) 2023 ZitaoTech
 * "BlueBerry" Android Layout by Drexel Macintosh
 * Ported to 9900 by zanderp
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>
 
#define ALT 1
#define UPPER 2
#define MEDIA 3

// Standard Behavior Configuration:
&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};
&sk{
    release-after-ms = <2500>;
};
&sl {
    release-after-ms = <2500>;
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };
    behaviors {
        ALTL: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&sl ALT>, <&to ALT>;
        };
    };

    behaviors {
        CTRLR: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&sk RCTRL>, <&to MEDIA>;
        };
    };
    behaviors {
        SHFT: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&sk LSHFT>, <&kp LGUI>;
        };
    };
    behaviors {
        MED: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&sl MEDIA>, <&to MEDIA>;
        };
    };
    behaviors {
        MAN: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&to 0>, <&to UPPER>;
        };
    };
    behaviors {
	KPM: behavior_KPM {
            compatible = "zmk,behavior-hold-tap";
            label = "KPM";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            bindings = <&msc>, <&kp>;
        };
    };
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };
    behaviors {
        hm2: homerow_mods_2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&ext_power &kp>;
        };
    };
  behaviors {
    tap: tap {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      // By default, macros will tap each behavior in the bindings list,
      // so this will tap "&kp <param1>".
      bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
    };
    
    mtt: mod_tap_tap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <125>;
      require-prior-idle-ms = <125>;
      bindings = <&tap>, <&tap>;
    };
  };
    behaviors {
	alt_to: behavior_alt_to {
            compatible = "zmk,behavior-hold-tap";
            label = "alt_to";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&to>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <

        /*
         *    KEYBOARD LAYOUT - ASCII by KyleBing
         *
                              ---------------------                                                                -------------------------
                             |    Shoulder Key1    |                                                              |      Shoulder Key2      |
                 ---------------------------------------------------------------------------------------------------------------------------------------------------
                |        Call key        |   Blackberry Key    |              Trackpad            |             Back Key           |          Endcall Key           |
                -----------------------------------------------------------------------------------------------------------------------------------------------------
                |     Q      |     W     |     E    |     R    |         T       |       Y        |        U       |       I       |        O        |      P       |
                -----------------------------------------------------------------------------------------------------------------------------------------------------
                |     A      |     S     |     D    |     F    |         G       |       H        |        J       |       K       |        L        |      ←       |
                -----------------------------------------------------------------------------------------------------------------------------------------------------
                 \    alt    |     Z     |     X    |     C    |         V       |       B        |        N       |       M       |        $        |    Enter    /
                   -----------------------------------------------------------------------------------------------------------------------------------------------
                              \      aA        |       0        |                    SPACE                  |          SYM          |         aA    /
                                -------------------------------------------------------------------------------------------------------------------
        */
                 		 &mkp LCLK                                                                                          &MAN

		            &mtt  K_CMENU TAB		 &kp CLCK		      &mkp LCLK			&mtt ESC K_BACK		 &mkp RCLK

    &mtt LS(Q) Q	&mtt LS(W) W      &mtt LS(E) E	&mtt LS(R) R     &mtt LS(T) T	&mtt LS(Y) Y	&mtt LS(U) U	&mtt LS(I) I	&mtt LS(O) O	 &mtt LS(P) P
    &mtt LS(A) A	&mtt LS(S) S      &mtt LS(D) D	&mtt LS(F) F     &mtt LS(G) G	&mtt LS(H) H	&mtt LS(J) J	&mtt LS(K) K	&mtt LS(L) L     &kp BSPC
    &ALTL		   &mtt LS(Z) Z      &mtt LS(X) X	&mtt LS(C) C     &mtt LS(V) V	&mtt LS(B) B	&mtt LS(N) N	&mtt LS(M) M	&mtt K_PP LG(N)  &kp ENTER

    		         &SHFT				 &hm2 EP_TOG K_PWR	      &kp SPACE			&sk LALT		 &CTRLR

            >;
        };


        alt_layer {

            bindings = <        
                		&to  0                                                                            	 &to  0

    	         	&kp K_PREV    			 &kp K_VOL_DN		      &kp K_PP			&kp K_VOL_UP		 &kp K_NEXT

    &mtt TILDE HASH	   &mtt GRAVE N1	&mtt LBRC N2	&mtt RBRC N3	&mtt LBKT LPAR	   &mtt RBKT RPAR	   &mtt LT UNDER	   &mtt GT MINUS	 &mtt CARET PLUS	&mtt PERCENT AT
    &mtt EQUAL STAR     &mtt N4	N4	   &mtt N5	N5	   &mtt N6	N6	   &mtt BSLH SLASH	&mtt PIPE COLON	&mtt AMPS SEMI    &mtt APOS APOS	 &mtt DQT DQT     &kp BSPC
    &to  0      	      &mtt N7 N7	   &mtt N8	N8	   &mtt N9	N9	   &mtt QMARK QMARK  &mtt EXCL EXCL	   &mtt COMMA COMMA  &mtt DOT DOT	 &mtt PSCRN DLLR 	&kp ENTER
	
    		         &SHFT				 &mtt LG(A) N0		      &kp SPACE			&sk LALT		 &sk LCTRL


            >;
        };

        upper_layer {

            bindings = <        
                 &to  0                                                                                       &to  0

    		&bt BT_SEL 0            	 &bt BT_SEL 1                 &bt BT_CLR                &bt BT_SEL 2             &bt BT_SEL 3

    &bt BT_SEL 4       	&none   	&none     	&sys_reset	&ext_power EP_TOG 	&none         	&none	           &none           &none      	   &none
    &none   		&none	  	&none	 	   &none     	&none	          	   &none     	   &none	           &none         	&none      	   &none
    &to  0  		&none    	&none    	&none      	&bl BL_DEC       	   &bl BL_TOG   	&bl BL_INC       &none           &bootloader    &none

    		&to  0               		 &none	               	      &out OUT_TOG              &none                    &none
            >;
        };

        media_layer {

            bindings = <        
		&to  0													&to  0
 
	    &kp K_PREV    			 &kp K_VOL_DN		      &kp K_PP			&kp K_VOL_UP		 &kp K_NEXT  

    &none		&kp UP     	&none    	&none  	  		&none			&none		&none    	&none	 	 &none		&kp DEL
    &kp LEFT	     	&kp DOWN   	&kp RIGHT      	&none	 		&none		     	&none	      	&none       	&none       	 &none		&kp BSPC
    &none     	 	&none     	&none     	&none    		&none	     		&none		&none       	&none       	 &none		&kp ENTER
	
    &none			&to  0			&none				&none				&none
            >;
        };
    };
};
